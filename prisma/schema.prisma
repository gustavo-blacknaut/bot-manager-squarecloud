datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  discordId String @unique

  squareCloudKey SquareCloudKey?
  deployTickets  DeployTicket[]
  payments       Payment[]
  logs           Log[]
}

model SquareCloudKey {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  encryptedKey String
  iv           String

  userId String @unique @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model GuildConfig {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  guildId          String @unique
  ticketCategoryId String?
  deployPrice      Float?
  logChannelId     String?
}

model DeployTicket {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  channelId      String       @unique
  guildId        String       
  status         TicketStatus @default(PENDING_UPLOAD)
  uploadedFileId String?
  createdAt      DateTime     @default(now())

  userId  String @db.ObjectId
  user    User   @relation(fields: [userId], references: [id])
  payment Payment?
}

model Payment {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  provider     String
  providerId   String   @unique
  status       String   @default("pending")
  amount       Float
  createdAt    DateTime @default(now())

  userId         String       @db.ObjectId
  user           User         @relation(fields: [userId], references: [id])
  deployTicketId String       @unique @db.ObjectId
  deployTicket   DeployTicket @relation(fields: [deployTicketId], references: [id])
}

model Log {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  level     String
  message   String
  meta      Json?
  timestamp DateTime @default(now())

  userId String? @db.ObjectId
  user   User?   @relation(fields: [userId], references: [id])
}

enum TicketStatus {
  PENDING_UPLOAD
  PENDING_PAYMENT
  PAID
  DEPLOYING
  COMPLETED
  FAILED
  EXPIRED
}
